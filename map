<!DOCTYPE html>
<html lang="th">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>ตรวจสอบการเข้าถึงตำแหน่งบนมือถือ</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f4f9;
      color: #333;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
      text-align: center;
    }

    .modal-content {
      background-color: #fff;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      width: 80%;
      max-width: 600px;
    }

    .btn {
      padding: 12px 24px;
      background-color: #4CAF50;
      color: white;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      font-size: 16px;
    }

    .btn:hover {
      background-color: #45a049;
    }

    .error-message {
      background-color: #f44336;
      color: white;
      padding: 10px;
      border-radius: 5px;
      margin-top: 20px;
      display: none; /* ซ่อนข้อผิดพลาด */
    }
  </style>
</head>
<body>
  <div class="modal-content">
    <h1>ตรวจสอบตำแหน่งของคุณ</h1>
    <p>เราจะตรวจสอบตำแหน่งของคุณเพื่อเข้าถึงหน้าที่ต้องการ</p>
    <button class="btn" onclick="getLocationPermission()">ตรวจสอบตำแหน่ง</button>
  </div>

  <div class="error-message" id="error-message"></div>

  <script>
    // ฟังก์ชันที่ใช้ตรวจสอบว่าเบราว์เซอร์รองรับ Geolocation หรือไม่
    function isGeolocationAvailable() {
      return 'geolocation' in navigator;
    }

    // ฟังก์ชันที่ดึงตำแหน่งผู้ใช้
    function getLocationPermission() {
      if (!isGeolocationAvailable()) {
        displayErrorMessage("ไม่รองรับ Geolocation", "เบราว์เซอร์ของคุณไม่รองรับการใช้บริการตำแหน่ง กรุณาใช้เบราว์เซอร์ที่รองรับ");
        return;
      }

      navigator.geolocation.getCurrentPosition(
        function (position) {
          const lat = position.coords.latitude;
          const lon = position.coords.longitude;

          if (lat !== null && lon !== null) {
            if (isWithinAllowedAreas(lat, lon)) {
              window.location.href = "/allowed-page.html"; // เปลี่ยนเส้นทางไปยังหน้าที่อนุญาต
            } else {
              displayErrorMessage("ตำแหน่งไม่อนุญาต", "ตำแหน่งของคุณอยู่นอกพื้นที่ที่อนุญาต");
            }
          } else {
            displayErrorMessage("ไม่พบตำแหน่ง", "ไม่สามารถหาตำแหน่งของคุณได้");
          }
        },
        function (error) {
          handleLocationError(error);
        },
        {
          enableHighAccuracy: true,
          timeout: 10000,
          maximumAge: 0,
        }
      );
    }

    // การตรวจสอบหลายพื้นที่
    function isWithinAllowedAreas(lat, lon) {
      const allowedAreas = [
        { lat: 7.0114380, lon: 100.5026383, radius: 1 }, // พื้นที่ 1
        { lat: 13.7563, lon: 100.5018, radius: 5 },      // พื้นที่ 2 (กรุงเทพ)
      ];

      return allowedAreas.some(area => {
        const distance = getDistanceFromLatLonInKm(lat, lon, area.lat, area.lon);
        return distance <= area.radius;
      });
    }

    // คำนวณระยะทางระหว่างตำแหน่ง
    function getDistanceFromLatLonInKm(lat1, lon1, lat2, lon2) {
      const R = 6371; // รัศมีโลกในกิโลเมตร
      const dLat = (lat2 - lat1) * (Math.PI / 180);
      const dLon = (lon2 - lon1) * (Math.PI / 180);
      const a =
        Math.sin(dLat / 2) * Math.sin(dLat / 2) +
        Math.cos(lat1 * (Math.PI / 180)) * Math.cos(lat2 * (Math.PI / 180)) *
        Math.sin(dLon / 2) * Math.sin(dLon / 2);
      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
      const distance = R * c;
      return distance;
    }

    // จัดการข้อผิดพลาดจาก Geolocation API
    function handleLocationError(error) {
      switch (error.code) {
        case error.PERMISSION_DENIED:
          displayErrorMessage("การปฏิเสธการอนุญาต", "กรุณาอนุญาตการเข้าถึงตำแหน่งในเบราว์เซอร์ของคุณ");
          break;
        case error.POSITION_UNAVAILABLE:
          displayErrorMessage("ไม่สามารถหาตำแหน่งได้", "กรุณาเปิด GPS หรือเปิดใช้งานตำแหน่งบนอุปกรณ์ของคุณ");
          break;
        case error.TIMEOUT:
          displayErrorMessage("หมดเวลาการขอข้อมูลตำแหน่ง", "กรุณาลองอีกครั้ง");
          break;
        default:
          displayErrorMessage("ข้อผิดพลาดที่ไม่รู้จัก", "เกิดข้อผิดพลาดไม่รู้จักในการขอข้อมูลตำแหน่ง");
          break;
      }
    }

    // แสดงข้อความข้อผิดพลาด
    function displayErrorMessage(title, message) {
      const errorMessageElement = document.getElementById('error-message');
      errorMessageElement.innerHTML = `<h2>${title}</h2><p>${message}</p>`;
      errorMessageElement.style.display = 'block';
    }
  </script>
</body>
</html>
